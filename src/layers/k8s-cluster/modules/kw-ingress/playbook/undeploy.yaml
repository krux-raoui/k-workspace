- name: check for cluster
  command:
    argv:
      - kind
      - get
      - clusters
  register: clusters_list
  environment:
    HOME: "{{ datas_host.root_path }}"

- name: uninstall nginx ingress
  command:
    argv:
      - helm
      - uninstall
      - --kube-context
      - "{{ k8s_cluster.k8s_context }}"
      - --namespace
      - ingress-nginx
      - kw-ingress-nginx
  register: uninstall_helm_ingress
  when: "{{ env_name in clusters_list.stdout }}"
  failed_when:
    - "'release: not found' not in uninstall_helm_ingress.stderr"
    - "'Kubernetes cluster unreachable:' not in uninstall_helm_ingress.stderr"
    - "'uninstalled' not in uninstall_helm_ingress.stdout"
  environment:
    HOME: "{{ datas_host.root_path }}"

- name: delete nginx ingress namespace
  k8s:
    state: absent
    context: "{{ k8s_cluster.k8s_context }}"
    api_version: v1
    kind: Namespace
    name: ingress-nginx

  when: "{{ env_name in clusters_list.stdout }}"
  environment:
    HOME: "{{ datas_host.root_path }}"
- name: wait for namespace deletion completed
  command:
    argv:
      - kubectl
      - wait
      - --context
      - "{{ k8s_cluster.k8s_context }}"
      - --for=delete
      - namespace/ingress-nginx
      - --timeout=90s
  register: wait_delete
  when: "{{ env_name in clusters_list.stdout }}"
  failed_when:
    - "not 'not found' in wait_delete.stderr"
    - "not 'condition met' in wait_delete.stdout"
  environment:
    HOME: "{{ datas_host.root_path }}"
