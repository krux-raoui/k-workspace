# get docker_host env variable
# FIXME: rewrite in pure-ansible
- name: extracting docker-machine env vars
  shell: "sh ../scripts/extract-docker-machine-vars.sh {{ env_name }}"
  register: docker_machine_env_exports
  changed_when: no
  environment:
    HOME: "{{ datas_host.root_path }}"
- name: setting variables in task context
  set_fact:
    key_value: "true" # warning disable in vscode ( not needed for real)
    docker_machine_env: "{{ docker_machine_env_exports.stdout | from_json }}"

- name: check for cluster
  command:
    argv:
      - kind
      - get
      - clusters
  register: clusters_list
  environment:
    HOME: "{{ datas_host.root_path }}"
    DOCKER_CERT_PATH: "{{ docker_machine_env.DOCKER_CERT_PATH }}"
    DOCKER_HOST: "{{ docker_machine_env.DOCKER_HOST }}"
    DOCKER_MACHINE_NAME: "{{ docker_machine_env.DOCKER_MACHINE_NAME }}"
    DOCKER_TLS_VERIFY: "{{ docker_machine_env.DOCKER_TLS_VERIFY }}"

- name: create kw-builder-git namespace
  k8s:
    state: present
    context: "{{ k8s_cluster.k8s_context }}"
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: kw-builder-git
        labels:
          ws.krux.io/backup-include: "true"
  environment:
    HOME: "{{ datas_host.root_path }}"
  when: "env_name in clusters_list.stdout"
- name: create "temp" value file for helm
  copy:
    content: "{{ builder_host['kw-builder-git'].helm_values | to_nice_yaml }}"
    dest: ./kw-builder-git.helm_values.yaml
  when: "env_name in clusters_list.stdout"
- name: installing kw-builder-git helm
  command:
    argv:
      - helm
      - upgrade
      - --install
      - --kube-context
      - "{{ k8s_cluster.k8s_context }}"
      - --wait
      - --namespace
      - kw-builder-git
      - kw-builder-git-gogs
      - ../modules/kw-builder-git/chart/
      - -f
      - ./kw-builder-git.helm_values.yaml
  register: helm_install_result
  environment:
    HOME: "{{ datas_host.root_path }}"
  when: "env_name in clusters_list.stdout"
- name: delete "temp" value file for helm
  file:
    path: ./kw-builder-git.helm_values.yaml
    state: absent
  when: "env_name in clusters_list.stdout"
- name: gogs already configured
  stat:
    path: "{{ datas_host.root_path }}/shared/kw-builder-git/gogs/conf/app.ini"
  register: gogs_app_ini_stat

- name: gogs post install
  uri:
    url: http://git.{{ dns_host.tld }}/install
    method: POST
    body_format: form-urlencoded
    body: "{{ builder_host['kw-builder-git'].gogs_values }}"
    status_code: 302
  when:
    - "not gogs_app_ini_stat.stat.exists"
