- name: extracting docker-machine env vars for registry
  shell: "sh ./roles/common/files/extract-docker-machine-vars.sh {{ dns_host.docker_machine_name_registry }}"
  register: docker_machine_env_exports_registry
  changed_when: no
  environment:
    HOME: "{{ datas_host.root_path }}"

- name: extracting docker-machine env vars for k8s
  shell: "sh ./roles/common/files/extract-docker-machine-vars.sh {{ dns_host.docker_machine_name_k8s }}"
  register: docker_machine_env_exports_k8s
  changed_when: no
  environment:
    HOME: "{{ datas_host.root_path }}"

- name: setting variables in task context
  set_fact:
    key_value: "true" # warning disable in vscode ( not needed for real)
    docker_machine_env_registry: "{{ docker_machine_env_exports_registry.stdout | from_json }}"
    docker_machine_env_k8s: "{{ docker_machine_env_exports_k8s.stdout | from_json }}"

- name: get brew root path
  shell: "brew --prefix"
  register: "brew_prefix"

- name: create dnsmasq domain file
  file:
    path: "{{ brew_prefix.stdout }}/etc/dnsmasq.d/{{ dns_host.tld }}.conf"
    state: touch

- name: write dnsmasq domain file
  blockinfile:
    path: "{{ brew_prefix.stdout }}/etc/dnsmasq.d/{{ dns_host.tld }}.conf"
    block: |
      address=/.{{ dns_host.tld }}/{{ docker_machine_env_k8s.DOCKER_HOST_IP }}
      address=/registry.{{ dns_host.tld }}/{{ docker_machine_env_registry.DOCKER_HOST_IP }}
    marker: "# {mark} {{ env_name }} ANSIBLE MANAGED BLOCK"
  register: dnsmasq_config_changed

- name: restart dnsmasq
  become: yes
  shell: "brew services restart dnsmasq"
  when: dnsmasq_config_changed.changed

- name: reset dns cache
  become: yes
  shell: "killall -HUP mDNSResponder"
  when: dnsmasq_config_changed.changed
