- name: extracting docker-machine env vars
  shell: "sh ./roles/common/files/extract-docker-machine-vars.sh {{ docker_machine_name }}"
  register: docker_machine_env_exports
  changed_when: no
  environment:
    HOME: "{{ home_path }}"

- name: setting variables in task context
  set_fact:
    key_value: "true" # warning disable in vscode ( not needed for real)
    docker_machine_env: "{{ docker_machine_env_exports.stdout | from_json }}"

- name: check for cluster
  command:
    argv:
      - kind
      - get
      - clusters
  register: clusters_list
  changed_when: no
  environment:
    HOME: "{{ home_path }}"
    DOCKER_CERT_PATH: "{{ docker_machine_env.DOCKER_CERT_PATH }}"
    DOCKER_HOST: "{{ docker_machine_env.DOCKER_HOST }}"
    DOCKER_MACHINE_NAME: "{{ docker_machine_env.DOCKER_MACHINE_NAME }}"
    DOCKER_TLS_VERIFY: "{{ docker_machine_env.DOCKER_TLS_VERIFY }}"

- name: create {{ module_name }} namespace
  k8s:
    state: present
    context: "{{ k8s_context }}"
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ namespace }}"
        labels:
          app.kubernetes.io/name: "{{ namespace }}"
          app.kubernetes.io/instance: "{{ namespace }}"
          ws.krux.io/backup-include: "true"
  environment:
    HOME: "{{ home_path }}"
    DOCKER_CERT_PATH: "{{ docker_machine_env.DOCKER_CERT_PATH }}"
    DOCKER_HOST: "{{ docker_machine_env.DOCKER_HOST }}"
    DOCKER_MACHINE_NAME: "{{ docker_machine_env.DOCKER_MACHINE_NAME }}"
    DOCKER_TLS_VERIFY: "{{ docker_machine_env.DOCKER_TLS_VERIFY }}"
  when: "env_name in clusters_list.stdout"

- name: create "temp" helm_values files for  {{ module_name }}"
  copy:
    content: "{{ helm_values | to_nice_yaml }}"
    dest: ./{{ module_name }}.helm_values.tmp.yaml
  when: "env_name in clusters_list.stdout"

- name: "installing/upgrading helm chart for {{ module_name }}"
  command:
    argv:
      - helm
      - upgrade
      - --install
      - --kube-context
      - "{{ k8s_context }}"
      - --wait
      - --namespace
      - "{{ namespace }}"
      - -f
      - ./{{ module_name }}.helm_values.tmp.yaml
      - "{{ module_name }}"
      - "{{ chart_path }}"
  environment:
    HOME: "{{ home_path }}"
    DOCKER_CERT_PATH: "{{ docker_machine_env.DOCKER_CERT_PATH }}"
    DOCKER_HOST: "{{ docker_machine_env.DOCKER_HOST }}"
    DOCKER_MACHINE_NAME: "{{ docker_machine_env.DOCKER_MACHINE_NAME }}"
    DOCKER_TLS_VERIFY: "{{ docker_machine_env.DOCKER_TLS_VERIFY }}"
  when: "env_name in clusters_list.stdout"

- name: delete "temp" helm_values files for  {{ module_name }}"
  file:
    path: ./{{ module_name }}.helm_values.tmp.yaml
    state: absent
  when: "env_name in clusters_list.stdout"
