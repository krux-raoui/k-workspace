- name: get local cluster kind
  shell: kind get clusters
  changed_when: false
  register: clusters_list

#create datas shared folder
- name: create cluster data shared directory
  file:
    state: directory
    recurse: yes
    path: "{{ shared_folder }}"
    access_time: now

#Creating KIND cluster
- name: prepare kind cluster config
  template:
    src: ./roles/kws_deploy_kind_cluster/templates/kind-cluster.tpl.yaml
    dest: ./kind-cluster.yaml.tmp
  when: "env_name not in clusters_list.stdout"

- name: create kind cluster
  command:
    argv:
      - kind
      - create
      - cluster
      - --name
      - "{{ env_name }}"
      - --config
      - ./kind-cluster.yaml.tmp
  when: "env_name not in clusters_list.stdout"

- name: deleting kind-config template result
  file:
    path: ./kind-cluster.yaml.tmp
    state: absent
  when: "env_name not in clusters_list.stdout"

# Setup local kubeconfig
- name: setup kind kubeconfig
  command:
    cmd: kind export kubeconfig --name {{ env_name }}
  when: "env_name not in clusters_list.stdout"

- name: ensure kind docker network present
  shell: docker network inspect kind
  register: kind_network_present
  changed_when: false
  
- name: connect registry container to kind docker network
  shell: docker network connect "kind" {{ registry_container_name }}
  when: registry_container_name not in kind_network_present.stdout
  
- name: get kind nodes
  shell: kind get nodes --name {{ env_name }}
  register: kind_nodes
  when: "env_name not in clusters_list.stdout"
  
- name: setup kind nodes to local registry
  shell: kubectl annotate node "{{ item }}" "kind.x-k8s.io/registry=localhost:{{registry_container_port}}" --overwrite
  with_items: "{{ kind_nodes.stdout_lines}}"
  when: "env_name not in clusters_list.stdout"